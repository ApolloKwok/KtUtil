buildscript {
    ext {
        version_kt = '1.7.20'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$version_kt"
    id 'maven-publish'
    id 'signing'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kt"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    testImplementation 'junit:junit:4.13.2'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{
    kotlinOptions {
        freeCompilerArgs += [
                "-Xexplicit-api=warning",
                "-Xcontext-receivers",
                "-opt-in=kotlin.contracts.ExperimentalContracts",
                "-Xuse-k2",
        ]
    }
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(8)
}

//region maven publish
java {
    withJavadocJar()
    withSourcesJar()
}

group = 'io.github.apollokwok'
version = '1.0.2'
String URL = "github.com/ApolloKwok/KtUtil"

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'kt-util'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Kt Util'
                description = 'Some Kotlin syntax sugar.'
                url = "https://$URL"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ApolloKwok'
                        name = 'Apollo Kwok'
                        email = 'ApolloKwok@126.com'
                    }
                }
                scm {
                    connection = "scm:git:git://@${URL}.git"
                    developerConnection = "scm:git:ssh://@${URL}.git"
                    url = "https://$URL"
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = USERNAME
                password = PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
//endregion